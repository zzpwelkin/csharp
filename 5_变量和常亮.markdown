## 变量和常量

**问题:**
    
+ 什么是变量和常量?
+ C#中变量和常量该怎么定义？要注意哪些事项?

### 重点

1. 变量和常量概念和使用方法;
2. 变/常量格式化输出;
3. 变/常量类型转化;
4. C#中终端输入函数;

### 难点

1. 变量的作用域;
2. 在何处使用变/常量?

### 详细内容

**问题: 什么是变量和常量? **

> 变量在程序的运行过程中随时可以发生变化的量，代表一块内存空间。通过变量我们可以在内存中存/取一个数据，如数学代数问题;
    
> 常量用于在整个程序中将数据保持同一个值 ，相对于变量来说常量的值是不能更改的，如圆周率pi, 自然数e;
    
变量中可以存放单词、数值、日期、属性等内容，里面存储的值是可以变化的，可以对变量反复赋值、使用。每个变量都有自己的数据类型，它的值必须与类型相符。

*注意: 变量只能在有效的范围内使用。*


#### 变量的用法

+ 变量的使用分如下三步:
    
        1. 声明变量：根据数据的类型，开辟内存空间 
            int var;
            
        2. 初始化变量：将数据初始值存入内存空间 
            var = 0; or 
            
            int var = 0;
            
        3. 访问变量：读取变量的值或重新为变量赋值
        
            // 变量var的值并付给变量temvar
            int temvar = var; or
            
            // 读取变量var的值并打印到终端
            COnsole.WriteLine(var);
            
            //变量var的值加一
            var = var + 1; or

+ 变量作用域

     变量的作用域是指可以访问该变量的代码区域，也就是能够获取或者设置这个变量值的区域。
     
     *注意： 局部变量的作用域：是声明变量的语句块内,位于声明变量之后的区域；同名的局部变量不能在同一作用域内声明两次，否则会出现编译错误。*

#### C#中的输入

- ReadLine函数介绍

    C#中的输入主要是用`Console`类的`ReadLine`函数完成的。`ReadLine( )`函数用于向控制台进行输入操作，直到遇到Enter键才返回一个字符串。
    
        string name = Console.ReadLine();
        
-  输入的string类型转为其他类型   

    ReadLine函数返回的是一个字符串，那如果我想的到int或double类型，该如何做呢?
    
    > string转int类型： int 变量名=int.Parse(字符串)
    
    > string转double类型： double 变量名=double.Parse(字符串)
    
    如下示例代码:
    
        double price =double.Parse(Console.ReadLine());
        int count = int.Parse(Console.ReadLine());
        Console.WriteLine("你购买了{0}件{1},请付款：{2}元", count, name, price * count);



#### 常量的作用和用法

问题: 常量和变量在定义，使用上的区别 ?
    
1. 常量与变量相似，也是代表内存地址的名称。不同的是，符号常量的值在定义之后就不能改变了。
2. 符号常量也需要先定义再使用，声明方法与变量相似，唯一区别是：在声明变量的语法前面加上关键字const，并且在声明时就必须被初始化。
3. 定义常量语法：const  数据类型  常量名称= 值;

示例代码:
    
        const int pi = 3.14;
        
        pi = 3.145; (wrong)

### 实战  

#### 任务目标
    
1. 输入CRS系统运行后选择的操作编号，并用变量保存
2. 输入用户开户的账号、密码，并用变量保存
3. 格式化输出用户开户信息
        
#### 实现思路
    
1. 输出CRS系统运行后，可选的操作类型，并提示用户选择输入
2. 变量接收用户输入的操作类型编号
3. 输出开户提示信息
4. 用变量接收用户输入的账号和密码
5. 格式化输出用户的开户信息



